% ==================================================================
% FILE     tikzCollection.sty
% MACHINE  all
% INFO     collection of tikz macros
%
% DATE     05.08.2018
% OWNER    Bischofberger
% ==================================================================
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.

\ProvidesPackage{tikzCollection}


% ==================================================================
% construct w-s-w (angle-edge-angle-triangle)
% Since \pgfgetlastxy returns pt, all the computations here are done in pt. This means, 
% the arguments of \WSW{}{}{}{}{} have to be in pt only.
% -----------------------
% \coordinate (A) at (0,0);
% \coordinate (B) at (25pt,0);
% \coordinate (C) at (0,0);
% \WSW{90}{A}{B}{45}{C};
% \draw[fill=gray!30!] (A) -- node[below] {$s$} (B) -- (C) -- (A);
% \WSW{60}{C}{B}{30}{A};
% \draw (A) -- (B) -- (C) -- (A);
% \WSW{45}{A}{B}{90}{C};
% \draw[fill=gray!30!] (A) -- (B) -- (C) -- (A);
% \WSW{30}{A}{C}{60}{B};
% \draw (A) -- (B) -- node[right] {?} (C) -- (A);
% -----------------------
% Extraxt x-/y-Coordinates
\newdimen\XCoord
\newdimen\YCoord
\newcommand*{\ExtractCoordinate}[1]{\path (#1); \pgfgetlastxy{\XCoord}{\YCoord};}

\newcommand*{\WSW}[5]{% #1:alpha, #2:A, #3:B, #4:beta , #5:C (will be redefined)
  % 1. compute distance between A and B
  \coordinate (AB) at ($(#3)-(#2)$);
  \ExtractCoordinate{AB};  % !!! units in pt !!!
  \pgfmathsetmacro{\ABLength}{veclen(\XCoord,\YCoord)}

  % 2. compute third angle in triangle
  \pgfmathsetmacro{\GammaAngle}{180-#1-#4}

  % 3. law of sines
  \pgfmathsetmacro{\ACLength}{\ABLength/sin(\GammaAngle)*sin(#4)}
  \pgfmathsetmacro{\BCLength}{\ABLength/sin(\GammaAngle)*sin(#1)}

  % 4. compute C using rotation matrix
  \coordinate (ABNormed) at ($1/\ABLength*(AB)$);
  \ExtractCoordinate{ABNormed};  % !!! units in pt !!!
  \pgfmathsetmacro{\ABNormedLength}{veclen(\XCoord,\YCoord)}
  \pgfmathsetmacro{\CosAlpha}{cos(#1)}
  \pgfmathsetmacro{\SinAlpha}{sin(#1)}
  \pgfmathsetmacro{\cx}{\ACLength*((\CosAlpha*\XCoord) + (-\SinAlpha*\YCoord))};
  \pgfmathsetmacro{\cy}{\ACLength*((\SinAlpha*\XCoord) + ( \CosAlpha*\YCoord))};
  \coordinate (#5) at ($(#2)+(\cx pt,\cy pt)$);
}


% ==================================================================
% unit circle
\newcommand*{\Einheitskreis}[1][1.0]{%
  \begin{tikzpicture}[scale=#1]
    \draw (0,0) circle (5);
    \draw[->] (-6,0) -- (6,0) node[right] {$x$};
    \draw[->] (0,-6) -- (0,6) node[right] {$y$};
    \Point[node text={$(1,0)$},node pos=above right] {5,0}
    \Point[node text={$(0,1)$},node pos=above left] {0,5}
  \end{tikzpicture}
}


% ==================================================================
% recursively draw a Pythagoras Tree fractal
% Author: Timo Bingmann <tb@panthema.net>, 2013-06-27
% \PythagorasTree{levels}{angle}
\newcommand{\PythagorasTree}[2]{%
  \ifnum#1=0\else
    % randomly pick a color, prefer green and blue shades
    %\pgfmathsetmacro{\r}{0.6*rnd}
    %\pgfmathsetmacro{\g}{0.9*rnd}
    %\pgfmathsetmacro{\b}{0.7*rnd}
    %\definecolor{MyColor}{rgb}{\r,\g,\b}

    % draw the rectangle of this level
    %\draw[draw=MyColor] (0,0) rectangle (1,1);
    \draw[fill=black] (0,0) rectangle (1,1);

    % decrement level counter
    \pgfmathtruncatemacro{\next}{#1-1}

    % transform scope for left branch: move origin (1cm,0cm), rotate and scale
    % with the length of the left cathetus.
    \begin{scope}[
      yshift=1cm,xshift=0cm,
      rotate=#2,scale={cos(#2)}
      ]
      \PythagorasTree{\next}{#2}
    \end{scope}

    % now for the tricks: transform scope for right branch: move origin to the
    % top point of the triangle, rotate reverse and scale with length of right
    % cathetus.
    \begin{scope}[
      yshift={1cm * (1 + sin(#2)*cos(#2))},
      xshift={1cm * (cos(#2)*cos(#2))},
      rotate={#2-90},scale={sin(#2)}
      ]
      \PythagorasTree{\next}{#2}
    \end{scope}
  \fi
}

